
                            HEAD
                         /        ^
   git reset -- files   |         |
                         \         git commit
                            STAGE
                         /        ^
  git checkout -- files |         |
                         \         git add files
                         WORKING_DIR

git init
  - create a new git repository
git add
  - propose changes (add this content to the next commit)
git commit -m "Commit message"
  - commit changes
git commit -a
  - stage every file that is already tracked before doing the commit (no need of git add)
git rm
  - remove a file from your staging area and working directory
git log
  - view the commit history
git diff
  - compare your working directory to your staging area. The result tells you the changes you’ve made that you haven’t yet staged.
git diff --staged
  - compare your staged changes to your last commit
git commit --amend
  - correct the last commit 
git clone /path/to/repository
  - create a working copy of a local repository
git remote add origin /path/to/server
  - connect your repository with a remote
git push origin master
  - send changes to your remote repository (origin is where you want to send your changes, master is the branch you want to push your changes to)
git pull
  - update your local repository to the newest commit
git checkout -- files 
  - copy files from the stage to the working directory. Use this to throw away local changes. 
git reset -- files
  - copy files from the latest commit to the stage. Use this command to "undo" a git add files

git checkout <760ac7e>
  - go to 760ac7e commit and be in detached HEAD state
git checkout master
  - get out of detached HEAD state and go to last commit
